name: test

on:
  pull_request:
    paths-ignore:
      - README.md
      - CONTRIBUTING.md
      - docs/**.md
  push:
    branches: [master]
    paths-ignore:
      - README.md
      - CONTRIBUTING.md
      - docs/**.md

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 2.7
        odoo-version:
          - 8.0
    steps:
      # Shared steps
      - uses: actions/checkout@v1
      - name: Install python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate cache key CACHE
        run:
          echo "CACHE=${{ secrets.CACHE_DATE }} ${{ runner.os }} $(python -VV |
          sha256sum | cut -d' ' -f1) ${{ hashFiles('pyproject.toml') }} ${{
          hashFiles('poetry.lock') }} ${{ hashFiles('.pre-commit-config.yaml') }}" >>
          $GITHUB_ENV
      - uses: actions/cache@v1
        with:
          path: ~/.local/pipx/venvs
          key: pipx ${{ env.PY }} ${{ env.PIPX }}
      - uses: actions/cache@v1
        with:
          path: ~/.local/bin
          key: local-bin ${{ env.PY }} ${{ env.PIPX }}
      - name: Patch $PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - run: pipx install invoke
      - run: pipx install poetry
      - run: invoke develop

      # Specific steps for this action
      - name: Install Docker
        uses: docker-practice/actions-setup-docker@0.0.1
      # Precreate shared networks to avoid race conditions
      - run: docker network create inverseproxy_shared
      - run: docker network create globalwhitelist_shared
      # Let tests issue git commits
      - run: git config --global user.name CI
      - run: git config --global user.email CI@GITHUB
      # Run all tests
      - run: invoke test --verbose
        env:
          DOCKER_TEST: 1
          SELECTED_ODOO_VERSIONS: ${{ matrix.odoo-version }}
